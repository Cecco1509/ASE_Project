{
	"info": {
		"_postman_id": "08eea755-39fc-4f4f-b079-48f07e66512f",
		"name": "AdminGacha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15910404"
	},
	"item": [
		{
			"name": "get all gacha items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for valid request\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"\r",
							"    // Check that each item in the array has the required properties\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"description\");\r",
							"        pm.expect(item).to.have.property(\"id\");\r",
							"        pm.expect(item).to.have.property(\"image\");\r",
							"        pm.expect(item).to.have.property(\"name\");\r",
							"        pm.expect(item).to.have.property(\"rarityPercent\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Expect 404 for invalid endpoint\", function () {\r",
							"    pm.sendRequest(\"localhost:5000/api/admin/gachas\", function (err, res) {\r",
							"        pm.expect(res).to.have.status(404);\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/admin/gacha",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"admin",
						"gacha"
					]
				}
			},
			"response": [
				{
					"name": "get all gacha items",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/admin/gacha",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"gacha"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.7"
						},
						{
							"key": "Date",
							"value": "Tue, 19 Nov 2024 10:29:03 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "1747"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"description\": \"Updated item.\",\n        \"id\": 1,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.4\n    },\n    {\n        \"description\": \"Test item.\",\n        \"id\": 2,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.9\n    },\n    {\n        \"description\": \"Test item4.\",\n        \"id\": 4,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.5\n    },\n    {\n        \"description\": \"Test item4.\",\n        \"id\": 1002,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.4\n    },\n    {\n        \"description\": \"Test item8.\",\n        \"id\": 1003,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.8\n    },\n    {\n        \"description\": \"Test item8.\",\n        \"id\": 1004,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.8\n    },\n    {\n        \"description\": \"Test item 2.\",\n        \"id\": 1005,\n        \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n        \"name\": \"New Test Item\",\n        \"rarityPercent\": 0.21\n    }\n]"
				}
			]
		},
		{
			"name": "get gacha item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test if the response status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test if the response contains the expected fields\r",
							"pm.test(\"Response has the expected structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData).to.have.property('name');\r",
							"    pm.expect(jsonData).to.have.property('description');\r",
							"    pm.expect(jsonData).to.have.property('image');\r",
							"    pm.expect(jsonData).to.have.property('rarityPercent');\r",
							"});\r",
							"\r",
							"// Test if the 'id' is 1 (based on the URL passed)\r",
							"pm.test(\"ID should be 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"// Test if the 'rarityPercent' field is a number between 0 and 1\r",
							"pm.test(\"Rarity percent should be between 0 and 1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.rarityPercent).to.be.a('number').that.is.greaterThanOrEqual(0).and.lessThanOrEqual(1);\r",
							"});\r",
							"\r",
							"// TEST CASE: Invalid ID (non-existent ID)\r",
							"pm.test(\"Expect 404 for non-existent gacha item\", function () {\r",
							"    // Assuming 999999 does not exist\r",
							"    pm.sendRequest(\"localhost:5000/api/admin/gacha/999999\", function (err, res) {\r",
							"        pm.expect(res).to.have.status(404);\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/admin/gacha/1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"admin",
						"gacha",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "get gacha item",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/admin/gacha/1",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"gacha",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.7"
						},
						{
							"key": "Date",
							"value": "Tue, 19 Nov 2024 10:28:52 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "234"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"description\": \"Updated item.\",\n    \"id\": 1,\n    \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\n    \"name\": \"New Test Item\",\n    \"rarityPercent\": 0.4\n}"
				}
			]
		},
		{
			"name": "get gacha collections",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Gacha Collection - Status 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\"); // Expect response to be an array\r",
							"    \r",
							"    // Check that each item in the array has the required properties\r",
							"    jsonData.forEach(item => {\r",
							"        pm.expect(item).to.have.property(\"gachaId\");\r",
							"        pm.expect(item).to.have.property(\"id\");\r",
							"        pm.expect(item).to.have.property(\"source\");\r",
							"        pm.expect(item).to.have.property(\"timestamp\");\r",
							"        pm.expect(item).to.have.property(\"userId\");\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Expect 404 for invalid endpoint\", function () {\r",
							"    pm.sendRequest(\"localhost:5000/api/admin/gachacollections\", function (err, res) {\r",
							"        pm.expect(res).to.have.status(404);\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/api/admin/gachacollection",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"admin",
						"gachacollection"
					]
				}
			},
			"response": [
				{
					"name": "get gacha collections",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:5000/api/admin/gachacollection",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"gachacollection"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.7"
						},
						{
							"key": "Date",
							"value": "Tue, 19 Nov 2024 10:29:16 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "259"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"gachaId\": 1,\n        \"id\": 4,\n        \"source\": \"ROLL\",\n        \"timestamp\": \"Mon, 18 Nov 2024 21:03:01 GMT\",\n        \"userId\": 1\n    },\n    {\n        \"gachaId\": 1,\n        \"id\": 6,\n        \"source\": \"ROLL\",\n        \"timestamp\": \"Tue, 19 Nov 2024 09:37:00 GMT\",\n        \"userId\": 4\n    }\n]"
				}
			]
		},
		{
			"name": "/api/admin/gacha add",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test if the response status code is 200 (created) and if it returns gachaId\r",
							"pm.test(\"Status code is 200 and gachaId is returned\", function () {\r",
							"    pm.response.to.have.status(200);  // Expecting status 200 for successful creation\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('gachaId');  // Check if gachaId is returned\r",
							"    pm.expect(jsonData.gachaId).to.be.a('number');  // Check if gachaId is a number\r",
							"});\r",
							"\r",
							"// Test if the request body contains the required fields\r",
							"pm.test(\"Request body contains the expected fields\", function () {\r",
							"    var jsonData = pm.request.body.raw;  // Get the raw request body\r",
							"    var parsedBody = JSON.parse(jsonData);  // Parse it into a JSON object\r",
							"    pm.expect(parsedBody).to.have.property('description');\r",
							"    pm.expect(parsedBody).to.have.property('image');\r",
							"    pm.expect(parsedBody).to.have.property('name');\r",
							"    pm.expect(parsedBody).to.have.property('rarityPercent');\r",
							"});\r",
							"\r",
							"// Test if the 'rarityPercent' field is between 0 and 1\r",
							"pm.test(\"Rarity percent should be between 0 and 1\", function () {\r",
							"    var jsonData = pm.request.body.raw;  // Get the raw request body\r",
							"    var parsedBody = JSON.parse(jsonData);  // Parse it into a JSON object\r",
							"    pm.expect(parsedBody.rarityPercent).to.be.a('number').that.is.greaterThanOrEqual(0).and.lessThanOrEqual(1);\r",
							"});\r",
							"\r",
							"// TEST CASE: Create Gacha Item with Missing \"name\" Field\r",
							"pm.test(\"Create Gacha Item - Missing Name Field\", function () {\r",
							"    // Prepare the incomplete JSON data\r",
							"    const incompleteData = {\r",
							"        \"description\": \"Test item without a name.\",\r",
							"        \"image\": \"https://example.com/image.jpg\",\r",
							"        \"rarityPercent\": 0.4\r",
							"    };\r",
							"\r",
							"    // Send the POST request with missing \"name\" field\r",
							"    pm.sendRequest({\r",
							"        url: \"http://localhost:5000/api/admin/gacha\",\r",
							"        method: \"POST\",\r",
							"        header: {\r",
							"            \"Content-Type\": \"application/json\"\r",
							"        },\r",
							"        body: {\r",
							"            mode: \"raw\",\r",
							"            raw: JSON.stringify(incompleteData)\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        pm.expect(res).to.have.status(400); // Expect 400 Bad Request\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Test item 2.\",\r\n    \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\r\n    \"name\": \"New Test Item\",\r\n    \"rarityPercent\": 0.21\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/admin/gacha",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"admin",
						"gacha"
					]
				}
			},
			"response": [
				{
					"name": "/api/admin/gacha add",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Test item4.\",\r\n    \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\r\n    \"name\": \"New Test Item\",\r\n    \"rarityPercent\": 0.4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/admin/gacha",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"gacha"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.7"
						},
						{
							"key": "Date",
							"value": "Tue, 19 Nov 2024 10:18:02 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "22"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"gachaId\": 1002\n}"
				}
			]
		},
		{
			"name": "update gacha item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test if the response status code is 200 and the success message is returned\r",
							"pm.test(\"Status code is 200 and update successful\", function () {\r",
							"    pm.response.to.have.status(200);  // Expecting status 200 for successful update\r",
							"});\r",
							"\r",
							"// Test if the request body contains the required fields\r",
							"pm.test(\"Request body contains the expected fields\", function () {\r",
							"    var jsonData = pm.request.body.raw;  // Get the raw request body\r",
							"    var parsedBody = JSON.parse(jsonData);  // Parse it into a JSON object\r",
							"    pm.expect(parsedBody).to.have.property('description');\r",
							"    pm.expect(parsedBody).to.have.property('image');\r",
							"    pm.expect(parsedBody).to.have.property('name');\r",
							"    pm.expect(parsedBody).to.have.property('rarityPercent');\r",
							"});\r",
							"\r",
							"// Test if the 'rarityPercent' field is between 0 and 1\r",
							"pm.test(\"Rarity percent should be between 0 and 1\", function () {\r",
							"    var jsonData = pm.request.body.raw;  // Get the raw request body\r",
							"    var parsedBody = JSON.parse(jsonData);  // Parse it into a JSON object\r",
							"    pm.expect(parsedBody.rarityPercent).to.be.a('number').that.is.greaterThanOrEqual(0).and.lessThanOrEqual(1);\r",
							"});\r",
							"\r",
							"// TEST CASE: Update Gacha Item with Missing \"name\" Field\r",
							"pm.test(\"Update Gacha Item - Missing Name Field\", function () {\r",
							"    // Prepare the incomplete JSON data\r",
							"    const incompleteData = {\r",
							"        \"description\": \"Test item without a name.\",\r",
							"        \"image\": \"https://example.com/image.jpg\",\r",
							"        \"rarityPercent\": 0.4\r",
							"    };\r",
							"\r",
							"    // Send the POST request with missing \"name\" field\r",
							"    pm.sendRequest({\r",
							"        url: \"http://localhost:5000/api/admin/gacha/1\",\r",
							"        method: \"PUT\",\r",
							"        header: {\r",
							"            \"Content-Type\": \"application/json\"\r",
							"        },\r",
							"        body: {\r",
							"            mode: \"raw\",\r",
							"            raw: JSON.stringify(incompleteData)\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        pm.expect(res).to.have.status(400); // Expect 400 Bad Request\r",
							"    });\r",
							"});\r",
							"\r",
							"// TEST CASE: Missing required field 'name'\r",
							"pm.test(\"Should return error for missing 'name' field\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: 'http://localhost:5000/api/admin/gacha/1',\r",
							"        method: 'PUT',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json'\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                description: \"Updated item.\",\r",
							"                image: \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\r",
							"                rarityPercent: 0.4  // Missing the 'name' field\r",
							"            })\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        pm.expect(res).to.have.status(400);  // Expecting a 400 error due to missing field\r",
							"        pm.expect(res.json().message).to.eql(\"Missing required field: name\");  // Check for specific error message\r",
							"    });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Updated item.\",\r\n    \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\r\n    \"name\": \"New Test Item\",\r\n    \"rarityPercent\": 0.4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/admin/gacha/1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"admin",
						"gacha",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "update gacha item",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"Updated item.\",\r\n    \"image\": \"https://super.abril.com.br/wp-content/uploads/2019/12/reproducao_pokemon_episodio_pokemon_centenas_criancas_hospital.jpg\",\r\n    \"name\": \"New Test Item\",\r\n    \"rarityPercent\": 0.4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/admin/gacha/1",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"gacha",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.7"
						},
						{
							"key": "Date",
							"value": "Tue, 19 Nov 2024 11:03:05 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "46"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Gacha sucessfully updated.\"\n}"
				}
			]
		},
		{
			"name": "delete gacha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// TEST CASE 1: Successful deletion (ID exists)\r",
							"pm.test(\"Status code is 200 and item is deleted\", function () {\r",
							"    pm.response.to.have.status(200);  // Expecting status 200 for successful creation\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('messgae'); \r",
							"    pm.expect(jsonData.messgae).to.be.a('Gacha sucessfully deleted'); \r",
							"});\r",
							"\r",
							"// TEST CASE 2: Resource not found (ID does not exist)\r",
							"pm.test(\"Should return error for non-existent ID\", function () {\r",
							"    pm.sendRequest({\r",
							"        url: 'http://localhost:5000/api/admin/gacha/99999',  // Assuming 99999 doesn't exist\r",
							"        method: 'DELETE',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json'\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        pm.expect(res).to.have.status(404);  // Expecting 404 Not Found\r",
							"        pm.expect(res.json().error).to.eql(\"Resource not found\");  // Check for the 'Resource not found' error message\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/api/admin/gacha/1005",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"admin",
						"gacha",
						"1005"
					]
				}
			},
			"response": [
				{
					"name": "delete gacha",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:5000/api/admin/gacha/1005",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"gacha",
								"1005"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.7"
						},
						{
							"key": "Date",
							"value": "Tue, 19 Nov 2024 11:02:59 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "46"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"messgae\": \"Gacha sucessfully deleted.\"\n}"
				}
			]
		}
	]
}