version: "3.8"

services:
  apigateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: apigateway
    depends_on:
      # - auctionsadmin
      # - auctionsuser
      - authmicroservice
      # - auctiondbmanager
      - userdbmanager
      - gachadbmanager
      # - transactiondbmanager
      # - paymentdbmanager
      - gachamicroservice
      # - paymentsadmin
      # - paymentsuser
      # - roll
      # - transactionsadmin
      # - transactionsuser
      # - usersmicroservice
    ports:
      - "5000:5000"
    volumes:
      - ./config.json:/app/config.json
      - .:/ApiGateway
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=./ApiGateway/app.py
    secrets:
      - api_gateway_cert
      - api_gateway_cert_key
 
  # auctionsadmin:
  #   build:
  #     context: ./AuctionsAdmin
  #     dockerfile: Dockerfile
  #   container_name: auctionsadmin

  # auctionsuser:
  #   build:
  #     context: ./AuctionsUser
  #     dockerfile: Dockerfile
  #   container_name: auctionsuser

  authmicroservice:
    build:
      context: ./AuthMicroservice
      dockerfile: Dockerfile
    container_name: authmicroservice
    depends_on:
      - authdatabase
    volumes:
      - ./config.json:/app/config.json
    secrets:
      - token_secret
      - auth_cert
      - auth_cert_key

  authdatabase:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      - SA_PASSWORD=Password1.
      - ACCEPT_EULA=Y
    container_name: authdatabase

  gachadatabase:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      - SA_PASSWORD=Password1.
      - ACCEPT_EULA=Y
    container_name: gachadatabase

  userdatabase:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      - SA_PASSWORD=Password1.
      - ACCEPT_EULA=Y
    container_name: userdatabase

  # paymentdatabase:
  #   image: mcr.microsoft.com/mssql/server:2017-latest
  #   environment:
  #     - SA_PASSWORD=Password1.
  #     - ACCEPT_EULA=Y
  #   container_name: paymentdatabase

  # auctiondatabase:
  #   image: mcr.microsoft.com/mssql/server:2017-latest
  #   environment:
  #     - SA_PASSWORD=Password1.
  #     - ACCEPT_EULA=Y
  #   container_name: auctiondatabase
  
  # transactiondatabase:
  #   image: mcr.microsoft.com/mssql/server:2017-latest
  #   environment:
  #     - SA_PASSWORD=Password1.
  #     - ACCEPT_EULA=Y
  #   container_name: transactiondatabase

  gachamicroservice:
    build:
      context: ./GachaMicroservice
      dockerfile: Dockerfile
    container_name: gachamicroservice
    volumes:
      - ./config.json:/app/config.json
      - .:/GachaMicroservice
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=./GachaMicroservice/app.py
    depends_on:
      - gachadbmanager
    secrets:
      - gacha_ms_cert
      - gacha_ms_cert_key

  # paymentsadmin:
  #   build:
  #     context: ./PaymentsAdmin
  #     dockerfile: Dockerfile
  #   container_name: paymentsadmin
  #   volumes: 
  #     - ./config.json:/app/config.json

  # paymentsuser:
  #   build:
  #     context: ./PaymentsUser
  #     dockerfile: Dockerfile
  #   container_name: paymentsuser
  #   volumes:
  #     - ./config.json:/app/config.json

  # roll:
  #   build:
  #     context: ./Roll
  #     dockerfile: Dockerfile
  #   container_name: roll

  # transactionsadmin:
  #   build:
  #     context: ./TransactionsAdmin
  #     dockerfile: Dockerfile
  #   container_name: transactionsadmin

  # transactionsuser:
  #   build:
  #     context: ./TransactionsUser
  #     dockerfile: Dockerfile
  #   container_name: transactionsuser

  # usersmicroservice:
  #   build:
  #     context: ./UsersMicroservice
  #     dockerfile: Dockerfile
  #   container_name: usersmicroservice
  #   volumes:
  #     - ./config.json:/app/config.json  # Mounts config.json into the container
  #   secrets:
  #     - users_cert
  #     - users_cert_key

  # auctiondbmanager:
  #     build:
  #       context: ./AuctionDBManager
  #       dockerfile: Dockerfile
  #     container_name: auctiondbmanager
  #     depends_on:
  #       - auctiondatabase
  #     volumes:
  #       - ./config.json:/app/config.json

  gachadbmanager:
    build:
      context: ./GachaDBManager
      dockerfile: Dockerfile
    container_name: gachadbmanager
    depends_on:
      - gachadatabase
    volumes:
      - ./config.json:/app/config.json
      - .:/GachaDBManager
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=./GachaDBManager/app.py

  # paymentdbmanager:
  #   build:
  #     context: ./PaymentDBManager
  #     dockerfile: Dockerfile
  #   container_name: paymentdbmanager
  #   depends_on:
  #     - paymentdatabase
  #   volumes:
  #     - ./config.json:/app/config.json

  # transactiondbmanager:
  #   build:
  #     context: ./TransactionDBManager
  #     dockerfile: Dockerfile
  #   container_name: transactiondbmanager
  #   depends_on:
  #     - transactiondatabase
  #   volumes:
  #     - ./config.json:/app/config.json

  userdbmanager:
    build:
      context: ./UserDBManager
      dockerfile: Dockerfile
    container_name: userdbmanager
    depends_on:
      - userdatabase
    volumes:
      - ./config.json:/app/config.json
      - .:/UserDBManager
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_APP=./UserDBManager/app.py

secrets:
  token_secret:
    file: ./secrets/token_secret.env
  users_cert:
    file: ./secrets/users_cert.pem
  users_cert_key:
    file: ./secrets/users_key.pem 
  auth_cert:
    file: ./secrets/auth_cert.pem
  auth_cert_key:
    file: ./secrets/auth_key.pem  
  api_gateway_cert:
    file: ./secrets/api_gateway_cert.pem
  api_gateway_cert_key:
    file: ./secrets/api_gateway_key.pem
  gacha_ms_cert:
    file: ./secrets/gacha_ms_cert.pem
  gacha_ms_cert_key:
    file: ./secrets/gacha_ms_key.pem
